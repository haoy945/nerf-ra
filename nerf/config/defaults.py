from fvcore.common.config import CfgNode as CN

_C = CN()

_C.OUTPUT_DIR = "./output"

_C.MODEL = CN()
_C.MODEL.DEVICE = "cuda"
_C.MODEL.WEIGHTS = ""
_C.MODEL.NUM_SAMPLES = 64
_C.MODEL.NUM_SAMPLES_FINE = 64

_C.MODEL.EMBEDDER = CN()
_C.MODEL.EMBEDDER.POSITION_DIM = 10
_C.MODEL.EMBEDDER.DIRECTION_DIM = 4

_C.MODEL.MLP = CN()
_C.MODEL.MLP.NUM_LAYERS = 8
_C.MODEL.MLP.SKIPS = [4, ]
_C.MODEL.MLP.POSITION_DIM = 60
_C.MODEL.MLP.DIRECTION_DIM = 24
_C.MODEL.MLP.MIDDEL_DIM = 256
_C.MODEL.MLP.INCLUDE_INPUT = True

_C.MODEL.RENDER = CN()
_C.MODEL.RENDER.RAW_NOISE_STD = 0.0

_C.SOLVER = CN()
_C.SOLVER.BASE_LR = 5e-4
_C.SOLVER.OPTIMIZER_NAME = "Adam"
_C.SOLVER.BETAS = (0.9, 0.999)
_C.SOLVER.EPS = 1e-7
_C.SOLVER.LR_SCHEDULER_NAME = "ExponentialDecayLR"
_C.SOLVER.DECAY_STEPS = 250000
_C.SOLVER.DECAY_RATE = 0.1
_C.SOLVER.BATCH_SIZE = 1024
_C.SOLVER.MAX_ITER = 200000
_C.SOLVER.CHECKPOINT_PERIOD = 10000

_C.DATASET = CN()
_C.DATASET.TYPE = 'blender'
_C.DATASET.USE_PIXEL_BATCHING = False
_C.DATASET.USE_VIEWDIRS = True
_C.DATASET.ROOT_PATH = ""
_C.DATASET.DATADIR = "./nerf_synthetic/lego"
_C.DATASET.HALF_RES = False
_C.DATASET.SKIP = 1
_C.DATASET.TRAIN = 'train'
_C.DATASET.TEST = 'val'
_C.DATASET.WHITE_BACKGROUND = True

_C.TEST = CN()
_C.TEST.EVAL_PERIOD = 10000
_C.TEST.TEST_MINI_BATCH = 16384

_C.EVALUATION = CN()
_C.EVALUATION.VISUALIZE = False

_C.VISUALIZE = CN()
_C.VISUALIZE.SAVEDIR = ""
_C.VISUALIZE.VISUALIZE_GT = False
